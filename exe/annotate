#!/usr/bin/env ruby

unless File.exist?('./Rakefile') || File.exist?('./Gemfile')
  abort 'Please run annotate from the root of the project.'
end

require 'rubygems'
begin
  require 'bundler'
  Bundler.setup
rescue StandardError
end

here = File.expand_path(File.dirname __FILE__)
$LOAD_PATH << "#{here}/../lib"

require 'annotate'
require 'annotate/parser'

Annotate.bootstrap_rake

# Annotate::Parser.parse takes in ARGV
# - Parses it and writes stuff to ENV
# - Returns some in a hash as seen below, this script will exit if `:exit` is defined
options_result = Annotate::Parser.parse(ARGV)

exit if options_result[:exit]

# Not sure what this does yet
options = Annotate.setup_options(
  # .setup_options takes in starting options. It looks like :is_rake is used later down the road so we want to capture
  # if it was done via rake task or not.
  #
  # Looks like it's set in lib/tasks/annotate*.rake files
  is_rake: ENV['is_rake'] && !ENV['is_rake'].empty?
)

# Eager load Models when we're annotating models
Annotate.eager_load(options) if Annotate::Helpers.include_models?

# options_result[:target_action] has possible values of: [:do_annotations, :remove_annotations]
AnnotateModels.send(options_result[:target_action], options) if Annotate::Helpers.include_models?
AnnotateRoutes.send(options_result[:target_action], options) if Annotate::Helpers.include_routes?
